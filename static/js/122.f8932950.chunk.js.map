{"version":3,"file":"static/js/122.f8932950.chunk.js","mappings":"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","sources":["components/Loader/MiniLoader/MiniLoader.styled.ts","components/Loader/MiniLoader/MiniLoader.tsx","components/PostPage/Comment/Comments.styled.ts","components/PostPage/PostPage.styled.ts","redux/postsFeatures/postsOperation.ts","hooks/useActionPosts.tsx","hooks/useChangeTitlePage.tsx","components/PostPage/Comment/Comment.tsx","components/PostPage/Comment/Comments.tsx","components/PostPage/PostPage.tsx","views/PagePost/PostView.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst BoxCenterMiniLoader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: transparent;\r\n  min-height: 400px;\r\n  max-height: 100%;\r\n  z-index: 1000;\r\n`;\r\n\r\nexport { BoxCenterMiniLoader };\r\n","import { WrapperLoader, LineOuter, LineInner } from './../Loader.styled';\r\nimport { BoxCenterMiniLoader } from './MiniLoader.styled';\r\n\r\nconst MiniLoader = () => {\r\n  return (\r\n    <BoxCenterMiniLoader>\r\n      <WrapperLoader>\r\n        <LineOuter />\r\n        <LineInner />\r\n      </WrapperLoader>\r\n    </BoxCenterMiniLoader>\r\n  );\r\n};\r\n\r\nexport default MiniLoader;\r\n","import styled from 'styled-components';\r\n\r\ninterface IBoxCommentPost {\r\n  isHeight?: number;\r\n}\r\n\r\nconst WrapperComment = styled.div`\r\n  position: relative;\r\n  padding: 0 10px;\r\n  margin-bottom: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 60px;\r\n  }\r\n`;\r\n\r\nconst NameComment = styled.p`\r\n  font-size: ${(props) => props.theme.typography.textSmall.primary};\r\n  font-weight: ${(props) => props.theme.typography.textWeight.primary};\r\n  font-family: ${(props) => props.theme.typography.textFamily.main};\r\n  color: ${(props) => props.theme.palette.text.primary};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -moz-box;\r\n  -moz-box-orient: vertical;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 1;\r\n  -webkit-box-orient: vertical;\r\n  line-clamp: 1;\r\n  box-orient: vertical;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst BodyComment = styled.p`\r\n  font-size: ${(props) => props.theme.typography.textSmall.small};\r\n  font-weight: ${(props) => props.theme.typography.textWeight.main};\r\n  font-family: ${(props) => props.theme.typography.textFamily.main};\r\n  color: ${(props) => props.theme.palette.text.primary};\r\n`;\r\n\r\nconst TitleComments = styled.h3`\r\n  font-size: ${(props) => props.theme.typography.textMedium.small};\r\n  font-weight: ${(props) => props.theme.typography.textWeight.main};\r\n  font-family: ${(props) => props.theme.typography.textFamily.main};\r\n  color: ${(props) => props.theme.palette.text.primary};\r\n  font-style: italic;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst MessageText = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: ${(props) => props.theme.typography.textMedium.small};\r\n  font-weight: ${(props) => props.theme.typography.textWeight.main};\r\n  font-family: ${(props) => props.theme.typography.textFamily.main};\r\n  color: ${(props) => props.theme.palette.text.primary};\r\n  height: 70%;\r\n`;\r\nconst BoxCommentPost = styled.div<IBoxCommentPost>`\r\n  position: relative;\r\n  background-color: ${(props) => props.theme.palette.backgroundArticle.primary};\r\n  padding: 10px 20px;\r\n  min-width: 200px;\r\n  width: auto;\r\n  height: auto;\r\n  overflow-y: scroll;\r\n  border-radius: 8px;\r\n  height: ${(props) => props.isHeight && props.isHeight}px;\r\n  transition: all 0.2s ease;\r\n\r\n  @media (min-width: 768px) {\r\n    border-radius: 0;\r\n    border-top-right-radius: 8px;\r\n    border-bottom-right-radius: 8px;\r\n    width: 40%;\r\n  }\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: ${(props) => props.theme.palette.iconColor.primary};\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nexport { WrapperComment, NameComment, BodyComment, TitleComments, MessageText, BoxCommentPost };\r\n","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\ninterface IInputSend {\r\n  isScroll?: number;\r\n}\r\n\r\nconst WrapperPost = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${(props) => props.theme.palette.background.primary};\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  padding: 20px;\r\n`;\r\n\r\nconst BoxCenterPost = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 8px;\r\n  max-width: 800px;\r\n  padding: 20px;\r\n\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst BoxContentPost = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 200px;\r\n  max-width: 600px;\r\n  background-color: ${(props) => props.theme.palette.backgroundArticle.main};\r\n  padding: 20px;\r\n  width: auto;\r\n  min-height: 400px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n\r\n  @media (min-width: 768px) {\r\n    border-radius: 0;\r\n    border-top-left-radius: 8px;\r\n    border-bottom-left-radius: 8px;\r\n    width: 100%;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled.h3`\r\n  margin-bottom: 8px;\r\n  text-transform: capitalize;\r\n  font-size: ${(props) => props.theme.typography.textMedium.main};\r\n  font-weight: ${(props) => props.theme.typography.textWeight.primary};\r\n  font-family: ${(props) => props.theme.typography.textFamily.main};\r\n  color: ${(props) => props.theme.palette.text.primary};\r\n`;\r\n\r\nconst PostText = styled.p`\r\n  font-size: ${(props) => props.theme.typography.textSmall.primary};\r\n  font-weight: ${(props) => props.theme.typography.textWeight.main};\r\n  font-family: ${(props) => props.theme.typography.textFamily.main};\r\n  color: ${(props) => props.theme.palette.text.primary};\r\n`;\r\nconst LinkArrowBack = styled(NavLink)`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 20px;\r\n  height: 20px;\r\n  top: 20px;\r\n  left: 20px;\r\n  border-radius: 50%;\r\n  background-color: ${(props) => props.theme.palette.background.primary};\r\n  text-decoration: none;\r\n\r\n  & > i {\r\n    color: ${(props) => props.theme.palette.iconColor.main};\r\n    font-size: 10px;\r\n    transition: all 0.2s ease;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    &:hover {\r\n      & > i {\r\n        transform: translateX(-2px);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { WrapperPost, BoxCenterPost, BoxContentPost, PostTitle, PostText, LinkArrowBack };\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { IPostOne } from '../../modules/InterfacePosts';\r\nimport {\r\n  getPostsRequest,\r\n  getPostSuccess,\r\n  getPostError,\r\n  getPostRequest,\r\n  getCommentsSuccess,\r\n  getCommentsError,\r\n  getCommentsRequest,\r\n  getPostsSuccess,\r\n} from './postsAction';\r\n\r\naxios.defaults.baseURL = 'https://jsonplaceholder.typicode.com';\r\n\r\nexport const getPosts = (setState: any) => async (dispatch: Dispatch<{ type: string }>) => {\r\n  dispatch(getPostsRequest());\r\n  try {\r\n    const { data } = await axios.get<any>(`/posts`);\r\n\r\n    dispatch(getPostsSuccess(data));\r\n    setState(data);\r\n  } catch (error) {\r\n    dispatch(getPostError((error as Error).message));\r\n  }\r\n};\r\n\r\nexport const getPost =\r\n  (id: string | undefined, setPost: any) => async (dispatch: Dispatch<{ type: string }>) => {\r\n    dispatch(getPostRequest());\r\n\r\n    try {\r\n      const { data } = await axios.get<IPostOne>(`/posts/${id}`);\r\n\r\n      dispatch(getPostSuccess(data));\r\n      setPost(data);\r\n    } catch (error) {\r\n      dispatch(getPostError((error as Error).message));\r\n    }\r\n  };\r\n\r\nexport const getPostComments =\r\n  (id: any, setComment: any) => async (dispatch: Dispatch<{ type: string }>) => {\r\n    dispatch(getCommentsRequest());\r\n\r\n    try {\r\n      const { data } = await axios.get(`/posts/${id}/comments`);\r\n\r\n      dispatch(getCommentsSuccess(data));\r\n      setComment(data);\r\n    } catch (error) {\r\n      dispatch(getCommentsError((error as Error).message));\r\n    }\r\n  };\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useCallback } from 'react';\r\nimport { getPost, getPostComments, getPosts } from '../redux/postsFeatures/postsOperation';\r\nimport {\r\n  IActivePost,\r\n  IActiveComment,\r\n  ILoadingPost,\r\n  ILoadingComment,\r\n  ILoadingPosts,\r\n  IPosts,\r\n} from '../modules/InterfaceRedux';\r\n\r\nconst useActionPosts = () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state: IPosts) => state.posts.posts);\r\n  const activePost = useSelector((state: IActivePost) => state.posts.activePost);\r\n  const activeComment = useSelector((state: IActiveComment) => state.posts.activeCommentPost);\r\n  const loadingPost = useSelector((state: ILoadingPost) => state.posts.isLoadingPost);\r\n  const loadingComment = useSelector((state: ILoadingComment) => state.posts.isLoadingComments);\r\n  const loadinPosts = useSelector((state: ILoadingPosts) => state.posts.isLoadingPosts);\r\n\r\n  const getActivePost = useCallback(\r\n    (id: string | undefined, setPost: any) => {\r\n      dispatch(getPost(id, setPost));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const getComments = useCallback(\r\n    (id: any, setComment: any) => {\r\n      dispatch(getPostComments(id, setComment));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const getAllPosts = useCallback(\r\n    (setState: any) => {\r\n      dispatch(getPosts(setState));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return {\r\n    posts,\r\n    activePost,\r\n    activeComment,\r\n    loadingPost,\r\n    loadingComment,\r\n    loadinPosts,\r\n    getActivePost,\r\n    getComments,\r\n    getAllPosts,\r\n  };\r\n};\r\n\r\nexport default useActionPosts;\r\n","import { useEffect } from 'react';\r\n\r\nconst useChangeTitlePage = () => {\r\n  const ChangeTitle = (title: string) => {\r\n    useEffect(() => {\r\n      document.title = title;\r\n    }, [title]);\r\n  };\r\n\r\n  return { ChangeTitle };\r\n};\r\n\r\nexport default useChangeTitlePage;\r\n","import { WrapperComment, NameComment, BodyComment } from './Comments.styled';\r\nimport { ICommentItem } from './../../../modules/InterfaceComment';\r\n\r\nconst Comment = ({ item, isComments }: ICommentItem) => {\r\n  return (\r\n    <WrapperComment>\r\n      <NameComment>{item.name}</NameComment>\r\n      <BodyComment>{item.body}</BodyComment>\r\n    </WrapperComment>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import { useEffect, useState } from 'react';\r\nimport { IComment } from '../../../modules/InterfaceComment';\r\nimport MiniLoader from '../../Loader/MiniLoader/MiniLoader';\r\nimport Comment from './Comment';\r\nimport { TitleComments, MessageText, BoxCommentPost } from './Comments.styled';\r\nimport useActionPosts from '../../../hooks/useActionPosts';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Comments = ({ isContentPost }: any) => {\r\n  const { id } = useParams();\r\n  const { loadingComment, getComments } = useActionPosts();\r\n\r\n  const [isComments, setComments] = useState<any>({});\r\n\r\n  useEffect(() => {\r\n    getComments(id, setComments);\r\n  }, [getComments, id]);\r\n\r\n  return (\r\n    <BoxCommentPost isHeight={isContentPost.current?.offsetHeight}>\r\n      <TitleComments>Comments</TitleComments>\r\n      {loadingComment ? (\r\n        <MiniLoader />\r\n      ) : !!isComments.length ? (\r\n        isComments.map((item: IComment, index: number) => (\r\n          <Comment item={item} key={index} isComments={isComments} />\r\n        ))\r\n      ) : (\r\n        <MessageText>No comments</MessageText>\r\n      )}\r\n    </BoxCommentPost>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  WrapperPost,\r\n  BoxCenterPost,\r\n  BoxContentPost,\r\n  PostTitle,\r\n  PostText,\r\n  LinkArrowBack,\r\n} from './PostPage.styled';\r\nimport MiniLoader from '../Loader/MiniLoader/MiniLoader';\r\nimport useActionPosts from '../../hooks/useActionPosts';\r\nimport { useParams } from 'react-router-dom';\r\nimport Comments from './Comment/Comments';\r\n\r\nconst PostPage = () => {\r\n  const { id } = useParams();\r\n  const { loadingPost, getActivePost } = useActionPosts();\r\n  const [isPost, setPost] = useState<any>({});\r\n  const isContentPost = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    getActivePost(id, setPost);\r\n  }, [id, getActivePost]);\r\n\r\n  return (\r\n    <WrapperPost>\r\n      <BoxCenterPost>\r\n        <BoxContentPost ref={isContentPost}>\r\n          {loadingPost ? (\r\n            <MiniLoader />\r\n          ) : (\r\n            <>\r\n              <LinkArrowBack to={'/posts'}>\r\n                <i className=\"fas fa-arrow-left\"></i>\r\n              </LinkArrowBack>\r\n              <PostTitle>{isPost?.title}</PostTitle>\r\n              <PostText>{isPost?.body}</PostText>\r\n            </>\r\n          )}\r\n        </BoxContentPost>\r\n        <Comments isContentPost={isContentPost} />\r\n      </BoxCenterPost>\r\n    </WrapperPost>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import PostPage from '../../components/PostPage/PostPage';\r\nimport useChangeTitlePage from '../../hooks/useChangeTitlePage';\r\n\r\nconst PostView = () => {\r\n  const { ChangeTitle } = useChangeTitlePage();\r\n\r\n  ChangeTitle('JSON - post');\r\n\r\n  return <PostPage />;\r\n};\r\n\r\nexport default PostView;\r\n"],"names":["BoxCenterMiniLoader","styled","WrapperComment","NameComment","props","theme","typography","textSmall","primary","textWeight","textFamily","main","palette","text","BodyComment","small","TitleComments","textMedium","MessageText","BoxCommentPost","backgroundArticle","isHeight","iconColor","WrapperPost","background","BoxCenterPost","BoxContentPost","PostTitle","PostText","LinkArrowBack","NavLink","axios","dispatch","useDispatch","posts","useSelector","state","activePost","activeComment","activeCommentPost","loadingPost","isLoadingPost","loadingComment","isLoadingComments","loadinPosts","isLoadingPosts","getActivePost","useCallback","id","setPost","getPostRequest","data","getPostSuccess","getPostError","message","getPost","getComments","setComment","getCommentsRequest","getCommentsSuccess","getCommentsError","getPostComments","getAllPosts","setState","getPostsRequest","getPostsSuccess","getPosts","ChangeTitle","title","useEffect","document","item","isComments","name","body","isContentPost","useParams","useActionPosts","useState","setComments","current","offsetHeight","MiniLoader","length","map","index","isPost","useRef","ref","to","className","useChangeTitlePage"],"sourceRoot":""}